// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`@slicemachine/plugin-nuxt #index it creates an index.js file 1`] = `
"// This file is generated by Slice Machine. Update with care!

export { default as Foo } from './Foo'
export { default as Bar } from './Bar'
export { default as Baz } from './Baz'
"
`;

exports[`@slicemachine/plugin-nuxt #slice 1`] = `
Object {
  "data": "<template>
  <section class=\\"section\\">
    <prismic-rich-text :field=\\"slice.primary.title\\" />
    <prismic-rich-text :field=\\"slice.primary.description\\" />
  </section>
</template>

<script>
export default {
  name: \\"MySlice\\",
  props: {
    slice: {
      type: Object,
      required: true,
      default() {
        return {}
      },
    },
  },
}
</script>

<style scoped>
.section {
  position: relative;
  background: #f7f7f7;
  color: #111;
  padding: 4em;
  text-align: center;
}
a {
  color: #111;
}
</style>
",
  "filename": "index.vue",
}
`;

exports[`@slicemachine/plugin-nuxt #snippets snippet Boolean with useKey 1`] = `"<span>{{ slices[0].data ? 'true' : 'false' }}</span>"`;

exports[`@slicemachine/plugin-nuxt #snippets snippet Color with useKey 1`] = `"<span :style=\\"\`color: \${slices[1].data}\`\\">Some Text</span>"`;

exports[`@slicemachine/plugin-nuxt #snippets snippet ContentRelationship with useKey 1`] = `"<prismic-link :field=\\"slices[2].data\\">My Link</prismic-link>"`;

exports[`@slicemachine/plugin-nuxt #snippets snippet Date with useKey 1`] = `"<span>{{ slices[3].data }}</span>"`;

exports[`@slicemachine/plugin-nuxt #snippets snippet Embed with useKey 1`] = `"<prismic-embed :field=\\"slices[4].data\\" />"`;

exports[`@slicemachine/plugin-nuxt #snippets snippet GeoPoint with useKey 1`] = `"<span>{{ slices[5].data }}</span>"`;

exports[`@slicemachine/plugin-nuxt #snippets snippet Image with useKey 1`] = `"<prismic-image :field=\\"slices[6].data\\" />"`;

exports[`@slicemachine/plugin-nuxt #snippets snippet Link with useKey 1`] = `"<prismic-link :field=\\"slices[7].data\\">My Link</prismic-link>"`;

exports[`@slicemachine/plugin-nuxt #snippets snippet LinkToMedia with useKey 1`] = `"<prismic-link :field=\\"slices[8].data\\">My Link</prismic-link>"`;

exports[`@slicemachine/plugin-nuxt #snippets snippet Number with useKey 1`] = `"<span>{{ slices[9].data }}</span>"`;

exports[`@slicemachine/plugin-nuxt #snippets snippet Select with useKey 1`] = `"<span>{{ slices[10].data }}</span>"`;

exports[`@slicemachine/plugin-nuxt #snippets snippet StructuredText with useKey 1`] = `"<prismic-rich-text :field=\\"slices[11].data\\" />"`;

exports[`@slicemachine/plugin-nuxt #snippets snippet Text with useKey 1`] = `"<span>{{ slices[12].data }}</span>"`;

exports[`@slicemachine/plugin-nuxt #snippets snippet Timestamp with useKey 1`] = `"<span>{{ slices[13].data }}</span>"`;

exports[`@slicemachine/plugin-nuxt #snippets snippet UID with useKey 1`] = `"<span>{{ slices[14].data }}</span>"`;

exports[`@slicemachine/plugin-nuxt #snippets supported type Boolean should be truthy 1`] = `"<span>{{ slices[0].data ? 'true' : 'false' }}</span>"`;

exports[`@slicemachine/plugin-nuxt #snippets supported type Color should be truthy 1`] = `"<span :style=\\"\`color: \${slices[1].data}\`\\">Some Text</span>"`;

exports[`@slicemachine/plugin-nuxt #snippets supported type ContentRelationship should be truthy 1`] = `"<prismic-link :field=\\"slices[2].data\\">My Link</prismic-link>"`;

exports[`@slicemachine/plugin-nuxt #snippets supported type Date should be truthy 1`] = `"<span>{{ slices[3].data }}</span>"`;

exports[`@slicemachine/plugin-nuxt #snippets supported type Embed should be truthy 1`] = `"<prismic-embed :field=\\"slices[4].data\\" />"`;

exports[`@slicemachine/plugin-nuxt #snippets supported type GeoPoint should be truthy 1`] = `"<span>{{ slices[5].data }}</span>"`;

exports[`@slicemachine/plugin-nuxt #snippets supported type Image should be truthy 1`] = `"<prismic-image :field=\\"slices[6].data\\" />"`;

exports[`@slicemachine/plugin-nuxt #snippets supported type Link should be truthy 1`] = `"<prismic-link :field=\\"slices[7].data\\">My Link</prismic-link>"`;

exports[`@slicemachine/plugin-nuxt #snippets supported type LinkToMedia should be truthy 1`] = `"<prismic-link :field=\\"slices[8].data\\">My Link</prismic-link>"`;

exports[`@slicemachine/plugin-nuxt #snippets supported type Number should be truthy 1`] = `"<span>{{ slices[9].data }}</span>"`;

exports[`@slicemachine/plugin-nuxt #snippets supported type Select should be truthy 1`] = `"<span>{{ slices[10].data }}</span>"`;

exports[`@slicemachine/plugin-nuxt #snippets supported type StructuredText should be truthy 1`] = `"<prismic-rich-text :field=\\"slices[11].data\\" />"`;

exports[`@slicemachine/plugin-nuxt #snippets supported type Text should be truthy 1`] = `"<span>{{ slices[12].data }}</span>"`;

exports[`@slicemachine/plugin-nuxt #snippets supported type Timestamp should be truthy 1`] = `"<span>{{ slices[13].data }}</span>"`;

exports[`@slicemachine/plugin-nuxt #snippets supported type UID should be truthy 1`] = `"<span>{{ slices[14].data }}</span>"`;

exports[`@slicemachine/plugin-nuxt #story 1`] = `
Object {
  "data": "import MyComponent from '../slices/foo';
import SliceZone from 'vue-slicezone'

export default {
  title: 'FooBar'
}

export const default-slice = () => ({
  components: {
    MyComponent,
    SliceZone
  },
  methods: {
    resolve() {
      return MyComponent
    }
  },
  data() {
    return {
      mock: {\\"id\\":\\"default-slice\\",\\"name\\":\\"Default slice\\",\\"docURL\\":\\"...\\",\\"version\\":\\"sktwi1xtmkfgx8626\\",\\"description\\":\\"FooSlice\\",\\"primary\\":{\\"title\\":{\\"type\\":\\"StructuredText\\",\\"config\\":{\\"single\\":\\"heading1\\",\\"label\\":\\"Title\\",\\"placeholder\\":\\"This is where it all begins...\\"}},\\"description\\":{\\"type\\":\\"StructuredText\\",\\"config\\":{\\"single\\":\\"paragraph\\",\\"label\\":\\"Description\\",\\"placeholder\\":\\"A nice description of your feature\\"}},\\"\\":{\\"config\\":{\\"label\\":\\"\\",\\"constraint\\":{},\\"thumbnails\\":[]},\\"type\\":\\"Image\\"}},\\"items\\":{}}
    }
  },
  template: '<SliceZone :slices=\\"[mock]\\" :resolver=\\"resolve\\" />'
})
default-slice.storyName = 'Default slice'


",
  "filename": "index.stories.vue",
}
`;
