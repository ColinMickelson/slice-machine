import type { Plugin } from "@slicemachine/plugin-middleware";

export const framework: Plugin["framework"] = "react";

export const slice: Plugin["slice"] = (name) => ({
  filename: "index.js",
  data: `import React from 'react'
import { RichText } from 'prismic-reactjs'
  
const ${name} = ({ slice }) => (
  <section>
    <span className="title">
      { slice.primary.title ? (
        <RichText render={slice.primary.title} />
      ) : (
        <h2>Template slice, update me!</h2>
      )}
    </span>
      { slice.primary.description ? (
        <RichText render={slice.primary.description}/>
      ) : (
         <p>start by editing this slice from inside Slice Machine!</p>
      )}
      <style jsx>{\`
          section {
            max-width: 600px;
            margin: 4em auto;
            text-align: center;
          }
          .title {
            color: #8592e0;
          }
      \`}</style>
    </section>
  )
  
  export default ${name}
`,
});

function safeComponentName(name: string): string {
  return `_${name.replace(/(^\w|-+\w)/g, (text) =>
    text.replace(/-/g, "").toUpperCase()
  )}`;
}

export const story: Plugin["story"] = (path, title, variations) => {
  const exportStatements = variations
    .map((variation) => {
      const name = safeComponentName(variation.id);
      return `
export const ${name} = () => <MyComponent slice={${JSON.stringify(
        variation
      )}} />
${name}.storyName = '${variation.name}'
`;
    })
    .join("/n");

  return {
    filename: "index.stories.js",
    data: `import MyComponent from '${path}';
export default { title: '${title}' }
${exportStatements}
`,
  };
};

export const index: Plugin["index"] = (slices) => ({
  filename: "index.js",
  data: `// This file is generated by Slice Machine. Update with care!

${slices
  .map((slice) => `export { default as ${slice} } from './${slice}'`)
  .join("\n")}
`,
});
